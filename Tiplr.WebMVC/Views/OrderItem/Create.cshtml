@model Tiplr.Models.OrderItemCreate

@{
    ViewBag.Title = "Add to order";
}

<h2>Add product to existing order</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.InventoryItemId)
    @Html.HiddenFor(model => model.ProductId)
    @Html.HiddenFor(model => model.OrderId)
    @Html.HiddenFor(model => model.AmtReceived)
    @Html.HiddenFor(model => model.CasePackPrice)
    <div class="form-group">
        <span class="control-label col-md-2"><b>Product Name</b></span>
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.ProductName, new { @class = "form-control", @readonly = "readonly" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.OrderAmt, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.OrderAmt, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OrderAmt, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Add to Order" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to Count Sheet", "Index", "InventoryItem")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
